name: Build and SonarQube Analysis

on:
  push:
    branches:
      - master

jobs:
  sonarqube-analysis:
    name: Build and analyze
    runs-on: ubuntu-latest  # Recommandé pour Python
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Configuration Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Version de Python que vous utilisez

      # Installation des dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Si vous avez un fichier requirements.txt

      # Analyse SonarQube pour Python
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Utilisez GITHUB_TOKEN au lieu de TOKEN_GITHUB
        with:
          args: >
            -Dsonar.projectKey=1Serahserah_TestAp_37920ed7-4f6e-480c-98a3-48cb946d55b6
            -Dsonar.projectName=TestAp
            -Dsonar.host.url=https://53fe-41-223-51-170.ngrok-free.app
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.python.version=3.10
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.python.coverage.reportPaths=coverage.xml  # Si vous avez des rapports de coverage
            -Dsonar.verbose=true

      # Vérification de la Quality Gate
      - name: SonarQube Quality Gate Check
        uses: SonarSource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
